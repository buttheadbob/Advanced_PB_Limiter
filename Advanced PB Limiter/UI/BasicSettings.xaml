<UserControl x:Class="Advanced_PB_Limiter.UI.BasicSettings"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:Advanced_PB_Limiter.UI"
             xmlns:settings="clr-namespace:Advanced_PB_Limiter.Settings"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:utils="clr-namespace:Advanced_PB_Limiter.Utils"
             mc:Ignorable="d"
             d:DesignHeight="Auto" d:DesignWidth="Auto" Background="#FF1E1E1E">
    
    <UserControl.Resources>
        <ObjectDataProvider MethodName="GetValues" ObjectType="{x:Type sys:Enum}" x:Key="EnumDataProvider">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="utils:Enums+Punishment"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <Style TargetType="{x:Type TabControl}">
            <Setter Property="BorderThickness" Value="3"/>
            <Setter Property="BorderBrush" Value="Black"/>
            <Setter Property="Background" Value="LightBlue"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TabControl">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <TabPanel Grid.Row="0" IsItemsHost="true"/>
                            <Border Grid.Row="1" BorderBrush="Black" Height="Auto" BorderThickness="1" CornerRadius="5">
                                <ContentPresenter ContentSource="SelectedContent" />
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style TargetType="{x:Type TabItem}">
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="BorderBrush" Value="Black"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="Foreground" Value="#FF27E915"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Grid>
                            <Border Name="Border" Background="Transparent" BorderBrush="Black" BorderThickness="1" CornerRadius="5,5,1,1">
                                <ContentPresenter x:Name="ContentSite"
                                                  VerticalAlignment="Center"
                                                  HorizontalAlignment="Center"
                                                  ContentSource="Header"
                                                  Margin="12,2,12,2"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="Black"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="False">
                                <Setter TargetName="Border" Property="Background" Value="Transparent"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type CheckBox}">
            <Setter Property="Foreground" Value="#FF27E915" />
            <Setter Property="FontSize" Value="12"/>
        </Style>
        <Style TargetType="{x:Type TextBlock}">
            <Setter Property="Foreground" Value="#FF27E915" />
            <Setter Property="FontSize" Value="12"/>
        </Style>
        <Style TargetType="{x:Type RadioButton}">
            <Setter Property="Foreground" Value="#FF27E915" />
            <Setter Property="FontSize" Value="12"/>
        </Style>
        <Style TargetType="{x:Type Button}">
            <Setter Property="FontSize" Value="12"/>
        </Style>
    </UserControl.Resources>
    <TabControl d:DataContext="{d:DesignInstance settings:Advanced_PB_LimiterConfig}">
        <TabItem Header="Main Settings">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                
                <TextBlock Grid.Row="0" Grid.Column="0" Text="Enable:" Margin="3"/>
                <CheckBox Grid.Row="0" Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Center" IsChecked="{Binding Enabled}"/>
                <TextBlock Grid.Row="0" Grid.Column="2" Text="Enable or Disable the plugin" Margin="3" TextWrapping="Wrap"/>
                
                <TextBlock Grid.Row="1" Grid.Column="0" Text="Debug Logging" Margin="3"/>
                <CheckBox Grid.Row="1" Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Center" IsChecked="{Binding DebugReporting}"/>
                <TextBlock Grid.Row="1" Grid.Column="2" Text="Shows some extra stuff that will fill your log file." Margin="3"/>
                
                <TextBlock Grid.Row="2" Grid.Column="0" Text="Turn off when owned by Nobody" Margin="3" VerticalAlignment="Center"/>
                <CheckBox Grid.Row="2" Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="3" IsChecked="{Binding TurnOffUnownedBlocks}"/>
                <TextBlock Grid.Row="2" Grid.Column="2" Text="PB's with no owner can still run... but should they?" Margin="3" TextWrapping="Wrap"/>
                
                <TextBlock Grid.Row="3" Grid.Column="0" Text="Auto Enable" Margin="3" VerticalAlignment="Center" />
                <CheckBox Grid.Row="3" Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="3" IsChecked="{Binding AllowSelfTurnOnExploit}"/>
                <TextBlock Grid.Row="3" Grid.Column="2" Text="Players use the Save() function or ctor to turn on their pb automatically.  This runs regardless if the pb is enabled or not.  Uncheck this box to prevent that." Margin="3" TextWrapping="Wrap"/>
                
                <TextBlock Grid.Row="4" Grid.Column="0" Text="Auto Enable NPC" Margin="3" VerticalAlignment="Center" />
                <CheckBox Grid.Row="4" Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="3" IsChecked="{Binding AllowNPCToAutoTurnOn}"/>
                <TextBlock Grid.Row="4" Grid.Column="2" Text="If Auto Enable for Players is checked, NPC will automatically be allowed.  Check this box to allow NPC programmable block Save() command to run.  Useful for custom operations on server!" Margin="3" TextWrapping="Wrap"/>
                
                <TextBlock Grid.Row="5" Grid.Column="0" Text="InstaKill Limit" Margin="3" VerticalAlignment="Center" Foreground="Red"/>
                <TextBox Grid.Row="5" Grid.Column="1" VerticalAlignment="Center" Margin="3" Width="40" Text="{Binding InstantKillThreshold}" TextAlignment="Center"/>
                <TextBlock Grid.Row="5" Grid.Column="2" Text="Any pb that reaches this limit will be damaged beyond function immediately, regardless if no offences have previously occured.  No Graceful shutdown request will be sent.  Set to 0 to disable." Margin="3" TextWrapping="Wrap"/>

                <TextBlock Grid.Row="6" Grid.Column="0" Text="Use SimTime" Margin="3" VerticalAlignment="Center"  />
                <CheckBox Grid.Row="6" Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="3" IsChecked="{Binding UseSimTime}" />
                <TextBlock Grid.Row="6" Grid.Column="2" Text="Use SimTime will adjust the runtime for Sim Speed.  When sim speed tanks then the script running can also take longer to run at no fault of the player." Margin="3" TextWrapping="Wrap" />
                
                <TextBlock Grid.Row="7" Grid.Column="0" Text="No Recompile On Restart" Margin="3" VerticalAlignment="Center" Foreground="Red"/>
                <CheckBox Grid.Row="7" Grid.Column="1" VerticalAlignment="Center" Margin="3" IsChecked="{Binding RequireRecompileOnRestart}" HorizontalAlignment="Center"/>
                <TextBlock Grid.Row="7" Grid.Column="2" Text="Checking this will prevent pb's from being compiled during restart when turned off.  This means the player will have to click Recompile instead of Run.  This is best to prevent timers from enabling pb's.  This also means a button will not turn the pb on." Margin="3" TextWrapping="Wrap" />
                
                <TextBlock Grid.Row="8" Grid.Column="0" Text="Monitor Memory Usage" Margin="3" VerticalAlignment="Center" />
                <CheckBox Grid.Row="8" Grid.Column="1" VerticalAlignment="Center" Margin="3" IsChecked="{Binding EnableMemoryMonitoring}" HorizontalAlignment="Center"/>
                <TextBlock Grid.Row="8" Grid.Column="2" Text="Enable/Disable the limiting and monitoring of memory usage." Margin="3" TextWrapping="Wrap" />
                
                <TextBlock Grid.Row="24" Grid.Column="0" Text="Max Memory per PB (in bytes)" Margin="3" VerticalAlignment="Center"/>
                <TextBox Grid.Row="24" Grid.Column="1" VerticalAlignment="Center" Margin="3" Width="75"  Text="{Binding PBMemoryThreshold}" TextAlignment="Center"/>
                <TextBlock Grid.Row="24" Grid.Column="2" Text="Limit PB use of system memory (Prevents some script attacks against the server and shitty scripts from making the system unstable.  Set to 0 to ignore." Margin="3" TextWrapping="Wrap" />
                
                <TextBlock Grid.Row="25" Grid.Column="0" Text="Destroy Protected PB" Margin="3" VerticalAlignment="Center" />
                <CheckBox Grid.Row="25" Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="3" IsChecked="{Binding KillBlockProtectedInSafeZone}"/>
                <TextBlock Grid.Row="25" Grid.Column="2" Text="Programmable Blocks in a SafeZone with damage disabled wont receive any damage.  Enable this will cause the block to be have all its building materials removed and reset to an unwelded block." Margin="3" TextWrapping="Wrap"/>
                
                <Button Grid.Row="26" Grid.Column="0" Grid.ColumnSpan="2" Margin="3" Content="Save Locally Only" Name="SaveLocallyButton" Click="SaveLocallyButton_OnClick"/>
                <TextBlock Grid.Row="26" Grid.Column="2" Margin="3" Text="Saves the configuration to this server only."/>
                
                <Button Grid.Row="27" Grid.Column="0" Grid.ColumnSpan="2" Margin="3" Content="Push Through Nexus" Name="SaveAndPush" Click="SaveAndPush_OnClick"/>
                <TextBlock Grid.Row="27" Grid.Column="2" Margin="3" Text="Sends the current settings to all Nexus servers with this plugin.  This will override their current settings."/>
            </Grid>
        </TabItem>
        
        <TabItem Header="Player Settings">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                
                <TextBlock Grid.Row="1" Grid.Column="0" Text="Graceful shutdown delay" Margin="3" VerticalAlignment="Center"/>
                <TextBox Grid.Row="1" Grid.Column="1" VerticalAlignment="Center" Margin="3" Width="40" Text="{Binding GracefulShutDownRequestDelay}"/>
                <TextBlock Grid.Row="1" Grid.Column="2" Text="How long to wait (in seconds) for the script to shutdown before the punishment is applied.  Use 0 for no delay.  Punishments are always applied after the delay." Margin="3" TextWrapping="Wrap"/>
                
                <TextBlock Grid.Row="3" Grid.Column="0" Text="Max runtime" Margin="3" VerticalAlignment="Center"/>
                <TextBox Grid.Row="3" Grid.Column="1" VerticalAlignment="Center" Margin="3" Width="40" Text="{Binding MaxRunTimeMS}"/>
                <TextBlock Grid.Row="3" Grid.Column="2" Text="Max amount of time (in milliseconds) a script is allowed to use before being issued any punishment.  Set to 0 for no limit." Margin="3" TextWrapping="Wrap"/>
                
                <TextBlock Grid.Row="4" Grid.Column="0" Text="Max runtime average" Margin="3" VerticalAlignment="Center"/>
                <TextBox Grid.Row="4" Grid.Column="1" VerticalAlignment="Center" Margin="3" Width="40" Text="{Binding MaxRunTimeMSAvg}"/>
                <TextBlock Grid.Row="4" Grid.Column="2" Text="Max amount of time (in milliseconds) a script is allowed to average before being issued any punishment.  Set to 0 for no limit." Margin="3" TextWrapping="Wrap"/>
                
                <TextBlock Grid.Row="5" Grid.Column="0" Text="Runs to track for Averaging" Margin="3" VerticalAlignment="Center"/>
                <TextBox Grid.Row="5" Grid.Column="1" VerticalAlignment="Center" Margin="3" Width="40" Text="{Binding MaxRunsToTrack}"/>
                <TextBlock Grid.Row="5" Grid.Column="2" Text="How many runs to use to calculate the runtime average." Margin="3" TextWrapping="Wrap"/>
                
                <TextBlock Grid.Row="6" Grid.Column="0" Text="Limit combined pb's" Margin="3" VerticalAlignment="Center"/>
                <CheckBox Grid.Row="6" Grid.Column="1" VerticalAlignment="Center" Margin="3" HorizontalAlignment="Center" IsChecked="{Binding CheckAllUserBlocksCombined}"/>
                <TextBlock Grid.Row="6" Grid.Column="2" Text="Track the total time of all running pb's owned by a player." Margin="3" TextWrapping="Wrap" VerticalAlignment="Center"/>
                
                <TextBlock Grid.Row="7" Grid.Column="0" Text="Max combined runtime limit" Margin="3" VerticalAlignment="Center"/>
                <TextBox Grid.Row="7" Grid.Column="1" VerticalAlignment="Center" Margin="3" Width="40" Text="{Binding MaxAllBlocksCombinedRunTimeMS}"/>
                <TextBlock Grid.Row="7" Grid.Column="2" Text="Max amount of time (in milliseconds) of all the players pb's before punishing." Margin="3" TextWrapping="Wrap"/>
                
                <TextBlock Grid.Row="8" Grid.Column="0" Text="Max combined runtime average" Margin="3" VerticalAlignment="Center"/>
                <TextBox Grid.Row="8" Grid.Column="1" VerticalAlignment="Center" Margin="3" Width="40" Text="{Binding MaxAllBlocksCombinedRunTimeMSAvg}"/>
                <TextBlock Grid.Row="8" Grid.Column="2" Text="Max amount of time (in milliseconds) all pb's owned by a user is allowed to average before being issued any punishment." Margin="3" TextWrapping="Wrap"/>
                
                <TextBlock Grid.Row="9" Grid.Column="0" Text="Punish all combined pb's" Margin="3" VerticalAlignment="Center"/>
                <CheckBox Grid.Row="9" Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Center" IsChecked="{Binding PunishAllUserBlocksCombinedOnExcessLimits}"/>
                <TextBlock Grid.Row="9" Grid.Column="2" Text="Enabled will apply the punishment to all the players active pb's.  Disabled will punish a random one." Margin="3" TextWrapping="Wrap"/>
                
                <TextBlock Grid.Row="10" Grid.Column="0" Text="Allowed offenses" Margin="3" VerticalAlignment="Center"/>
                <TextBox Grid.Row="10" Grid.Column="1" VerticalAlignment="Center" Margin="3" Width="40" Text="{Binding MaxOffencesBeforePunishment}"/>
                <TextBlock Grid.Row="10" Grid.Column="2" Text="Amount of offences by the player (not the pb) before punishment is applied." Margin="3" TextWrapping="Wrap"/>
                
                <TextBlock Grid.Row="11" Grid.Column="0" Text="Grace after offence" Margin="3" VerticalAlignment="Center"/>
                <TextBox Grid.Row="11" Grid.Column="1" VerticalAlignment="Center" Margin="3" Width="40" Text="{Binding GraceAfterOffence}"/>
                <TextBlock Grid.Row="11" Grid.Column="2" Text="Seconds after an offence before another offence can be incurred.  This prevents Update1 and Update10 from reaching offence limits and punishing any pb withing 1 second of the first offence." Margin="3" TextWrapping="Wrap"/>
                
                <TextBlock Grid.Row="12" Grid.Column="0" Text="Warn user on offense" Margin="3" VerticalAlignment="Center"/>
                <CheckBox Grid.Row="12" Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Center" IsChecked="{Binding WarnUserOnOffense}"/>
                <TextBlock Grid.Row="12" Grid.Column="2" Text="Send a warning to the user when their pb incurs an offense." Margin="3" TextWrapping="Wrap"/>
                
                <TextBlock Grid.Row="13" Grid.Column="0" Text="Remove offense after time" Margin="3" VerticalAlignment="Center"/>
                <TextBox Grid.Row="13" Grid.Column="1" VerticalAlignment="Center" Margin="3" Width="40" Text="{Binding OffenseDurationBeforeDeletion}"/>
                <TextBlock Grid.Row="13" Grid.Column="2" Text="How many minutes before an offense is removed.  Each offense is tracked, so only after an offense is at least this old will it be removed." Margin="3" TextWrapping="Wrap"/>
                
                <TextBlock Grid.Row="14" Grid.Column="0" Text="Clear data on pb recompile" Margin="3" VerticalAlignment="Center"/>
                <CheckBox Grid.Row="14" Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Center" IsChecked="{Binding ClearHistoryOnRecompile}"/>
                <TextBlock Grid.Row="14" Grid.Column="2" Text="When a player recompiles their script, resets all tracking data to null." Margin="3" TextWrapping="Wrap"/>
                
                <TextBlock Grid.Row="15" Grid.Column="0" Text="Keep inactive pb duration" Margin="3" VerticalAlignment="Center"/>
                <TextBox Grid.Row="15" Grid.Column="1" VerticalAlignment="Center" Margin="3" Width="40" Text="{Binding RemoveInactivePBsAfterSeconds}"/>
                <TextBlock Grid.Row="15" Grid.Column="2" Text="How long to keep inactive pb data, only useful for showing data.  Pb's removed from the game will be removed from tracking data regardless." Margin="3" TextWrapping="Wrap"/>
                
                <TextBlock Grid.Row="16" Grid.Column="0" Text="Keep player data with no pb's" Margin="3" VerticalAlignment="Center"/>
                <TextBox Name="RemovePlayersWithNoPbFrequency" Grid.Row="16" Grid.Column="1" VerticalAlignment="Center" Margin="3" Width="40" Text="{Binding RemovePlayersWithNoPBFrequencyInMinutes}"/>
                <TextBlock Grid.Row="16" Grid.Column="2" Text="Removes players from any reports when they have no pb's in game.  Set to 0 (zero) disable removing.  Setting above 0 to restart will activate again only after using Save Locally Only button." Margin="3" TextWrapping="Wrap"/>
                
                <TextBlock Grid.Row="17" Grid.Column="0" Name="PunishmentLabel" Text="Punishment type" Margin="3" VerticalAlignment="Center"/>
                <ComboBox Grid.Row="17" Grid.Column="1" Name="PunishmentComboBox" VerticalAlignment="Center" Margin="3" Width="40" Foreground="Black" SelectionChanged="PunishmentComboBox_OnSelectionChanged"/>
                <TextBlock Grid.Row="17" Grid.Column="2" Text="Turn off will disable the block.  Damage will applied the set amount of damage points to the block (may not occur in SafeZones.  Destroy will damage the pb to below functional level." Margin="3" TextWrapping="Wrap"/>
                
                <TextBlock Grid.Row="18" Grid.Column="0" Text="Damage points" Margin="3"/>
                <TextBox Grid.Row="18" Grid.Column="1" VerticalAlignment="Center" Margin="3" Width="40" Text="{Binding PunishDamageAmount}" />
                <TextBlock Grid.Row="18" Grid.Column="2" Text="The amount of points to apply to the pb when damage is selected." Margin="3" TextWrapping="Wrap"/>

                <Button Grid.Row="25" Grid.Column="0" Grid.ColumnSpan="2" Margin="3" Content="Save Locally Only" Click="SaveLocallyButton_OnClick" />
                <TextBlock Grid.Row="25" Grid.Column="2" Margin="3" Text="Saves the configuration to this server only." />

                <Button Grid.Row="26" Grid.Column="0" Grid.ColumnSpan="2" Margin="3" Content="Push Through Nexus" Click="SaveAndPush_OnClick" />
                <TextBlock Grid.Row="26" Grid.Column="2" Margin="3" Text="Sends the current settings to all Nexus servers with this plugin.  This will override their current settings." />
            </Grid>
        </TabItem>
        
        <TabItem Header="Faction Settings">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <Label Grid.Column="0" Grid.Row="0" Content="Limiting factions is a planned for the next update." FontSize="40" Foreground="Chartreuse"/>
            </Grid>
        </TabItem>
    </TabControl>
</UserControl>
